# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        
        if head.next is None:
            return None
        
        p1 = head
        p2 = head
        
        count = 0
        
        while p1:
            count +=1
            p1 = p1.next
            
        index1 = count//2
        
        for _ in range(index1-1):
            p2 = p2.next
            
        p2.next = p2.next.next
        
        return head
