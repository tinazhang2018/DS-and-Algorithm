# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def deepestLeavesSum(self, root: Optional[TreeNode]) -> int:
        
        
        result = []
        
        def dfs(root, level):
            if root is None:
                return
            
            if level >= len(result):
                result.append([])
                
            result[level].append(root.val)
            
            dfs(root.left, level+1)
            dfs(root.right, level+1)
            
            return
        
        dfs(root,0)
        
        if len(result) > 0:
            return sum(result[-1])
        else:
            return 0
