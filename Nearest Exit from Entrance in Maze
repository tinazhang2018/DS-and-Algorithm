class Solution:
    def nearestExit(self, maze: List[List[str]], entrance: List[int]) -> int:
        
        m = len(maze)
        n = len(maze[0])
        
        sr, sc = entrance
        
        maze[sr][sc] = "+"
        
        q = deque()
        
        q.append([sr, sc, 0])
        
        while q:
            cr, cc, cd = q.popleft()
            
            for d in [(1,0), (-1, 0), (0, 1), (0, -1)]:
                nr = cr+d[0]
                nc = cc+d[1]
                
                if 0 <= nr < m and 0 <= nc < n and maze[nr][nc] == ".":
                    
                    if nr in [0, m-1] or nc in [0, n-1]:
                        return cd+1
                    
                    maze[nr][nc] = "+"
                    q.append([nr,nc, cd+1])
                    
        return -1
