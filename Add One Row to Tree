# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def addOneRow(self, root: Optional[TreeNode], val: int, depth: int) -> Optional[TreeNode]:
        
        
        def insert(node, d):
            if ( node is None):
                return
            
            if ( d == depth-1 ):
                tmpleft = node.left
                node.left = TreeNode(val)
                node.left.left = tmpleft
                
                tmpright = node.right
                node.right = TreeNode(val)
                node.right.right = tmpright
            else:
                insert(node.left, d+1)
                insert(node.right, d+1)
                
        if ( depth == 1):
            tmpnode = TreeNode(val)
            tmpnode.left = root
            return tmpnode
        
        insert(root, 1)
        return root 
            
