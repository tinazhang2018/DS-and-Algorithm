class Solution(object):
    def minFallingPathSum(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: int
        """
        
        n = len(matrix)
        
        
        dp = [[0]*n for _ in range(n)]
        
        for i in range(n):
            dp[0][i] = matrix[0][i]
            
        for i in range(1, n):
            for j in range(n):
                dp[i][j] += matrix[i][j]
                if j > 0 and j < n-1:
                    get = min(dp[i-1][j-1], dp[i-1][j])
                    get = min(get,dp[i-1][j+1] )
                    dp[i][j] = get
                    
                elif j == 0:
                    dp[i][j] = min(dp[i-1][j], dp[i-1][j+1])
                elif j == n-1:
                    dp[i][j] = min(dp[i-1][j-1], dp[i-1][j])
                    
                dp[i][j] += matrix[i][j]
                    
        return min(dp[n-1])
