class Solution(object):
    def longestPalindromeSubseq(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        n = len(s)
        dp = [[0]*(n+1) for _ in range(n+1)]
        
        
        reverse = s[::-1]
        
        n = len(s)
        
        for i, v1 in enumerate(s):
            for j, v2 in enumerate(reverse):
                if ( v1 == v2):
                    dp[i+1][j+1] = dp[i][j] +1
                else:
                    dp[i+1][j+1] = max(dp[i+1][j], dp[i][j+1])
                    
        return dp[n][n]
